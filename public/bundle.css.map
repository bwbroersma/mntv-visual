{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { scale, fade } from 'svelte/transition';\n\n\tconst seats = 11;\n\texport let nomination = seats;\n\texport let avgVoteCount = 9;\n\n\texport let candidatesBlue = seats + 1;\n\texport let candidatesRed = 2;\n\texport let supportRed = 0.63;\n\t$: supportBlue = 1 - supportRed;\n\texport let nominationRed = 0;\n\t$: nominationBlue = nomination - nominationRed;\n\texport let votingRed = 'random';\n\texport let circleRadius = 20;\n\t$: candidatesTotal = candidatesBlue + candidatesRed;\n\n\t$: if (nominationRed > candidatesRed) {\n\t\tnominationRed = candidatesRed;\n\t}\n\t$: if (nominationRed > nomination) {\n\t\tnominationRed = nomination;\n\t}\n\t$: if (nomination > candidatesBlue + nominationRed) {\n\t\tnominationRed = nomination - candidatesBlue;\n\t}\n\n\tlet electedCount = 0;\n\tlet fiftyCount = 0;\n\n\tlet candidates = [];\n\t$: {\n\t\tfunction addVote(candidate) {\n\t\t\tlet red;\n\t\t\tswitch (votingRed) {\n\t\t\t\tcase 'random':\n\t\t\t\t{\n\t\t\t\t\tif (candidate.color == 'red') {\n\t\t\t\t\t\tred = Math.min(1, avgVoteCount / candidatesRed);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlet left = avgVoteCount - candidatesRed;\n\t\t\t\t\tred = left > 0 && candidate.id <= nomination ?\n\t\t\t\t\t\t\tMath.min(1, left / nominationBlue) :\n\t\t\t\t\t\t\tMath.max(0, (left - nominationBlue) / (candidatesBlue - nominationBlue));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'bullet':\n\t\t\t\t\tred = candidate.color == 'red' ? Math.min(1, avgVoteCount / candidatesRed) : 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ordered':\n\t\t\t\t{\n\t\t\t\t\tif (candidate.color == 'red') {\n\t\t\t\t\t\tred = candidate.id <= nominationRed && candidate.id < avgVoteCount ||\n\t\t\t\t\t\t\t  candidate.id <= nominationBlue + avgVoteCount ? 1 : 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlet left = avgVoteCount - candidatesRed;\n\t\t\t\t\tred = left > 0 && candidate.id <= candidatesRed + left ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet blue = Math.min(1,\n\t\t\t\t\t\tcandidate.id <= nomination ?\n\t\t\t\t\t\t\tavgVoteCount / nomination :\n\t\t\t\t\t\t\tMath.max(0, (avgVoteCount - nomination) / (candidatesTotal - nomination))\n\t\t\t\t\t   );\n\n\t\t\treturn {\n\t\t\t\t...candidate,\n\t\t\t\tfifty: blue * supportBlue + red * supportRed > 0.5,\n\t\t\t\ttotal: blue * supportBlue * 100 + red * supportRed * 100,\n\t\t\t\tblue: blue * supportBlue * 100,\n\t\t\t\tred: red * supportRed * 100,\n\t\t\t};\n\t\t}\n\n\t\tconst arr = [];\n\t\tfor (let i = 0; i < candidatesTotal; i++) {\n\t\t\tarr.push(addVote({\n\t\t\t\tid: i+1,\n\t\t\t\tcolor: (i >= nominationRed && i < nomination || i >= candidatesRed + nominationBlue) ? 'blue' : 'red',\n\t\t\t}));\n\t\t}\n\t\tconst electedIds = new Set(arr.slice().filter(x=>x.fifty).sort((a,b)=>b.total-a.total).map(x=>x.id).slice(0, seats));\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tarr[i].elected = electedIds.has(arr[i].id);\n\t\t}\n\t\telectedCount = electedIds.size;\n\t\tfiftyCount = arr.filter(x=>x.fifty).length;\n\t\tcandidates = arr;\n\t}\n</script>\n\n<style>\n\t.controls {\n\t\tposition: absolute;\n\t\tright: 1em;\n\t}\n\t.controls h2 {\n\t\tfont-size: 1rem;\n\t\tfont-weight: bold;\n\t\tmargin: 0 0 0.3rem 0;\n\t}\n\t.controls label input[type=\"radio\"] {\n\t\tmargin-right: 0.5rem;\n\t}\n\tsvg { width: 100%; height: 100%; margin: -8px }\n\t.candidate.red  circle { fill: #ff3300 }\n\t.candidate.blue circle { fill: #0066ff }\n\trect.red { fill: #F30; }\n\trect.blue { fill: #06F; }\n\t.candidate.fifty circle { stroke: #000; stroke-width: 2px; }\n\t.candidate.fifty.elected circle { stroke: #000; stroke-width: 4px !important; }\n\n\t.candidate text {\n\t\ttext-anchor: middle;\n\t\tfill: #FFF;\n\t\tfont-weight: bold;\n\t}\n\t.candidate.score text {\n\t\tfill: #000;\n\t\tfont-weight: normal;\n\t\tfont-size: 0.8rem;\n\t}\n\t.candidate text.legenda {\n\t\tfill: #000;\n\t\ttext-anchor: start;\n\t}\n\t.nomination text.start {\n\t\ttext-anchor: start;\n\t\tfont-style: italic;\n\t}\n\t.nomination text.end {\n\t\ttext-anchor: end;\n\t}\n\n</style>\n\n\n<div class=\"controls\">\n\t<h1>Parameters</h1>\n\t<label>\n\t\t<h2>Voordracht aantal ({nomination})</h2>\n\t\t<input type=\"range\" min=\"0\" max=\"{candidatesTotal}\" bind:value={nomination} step=\"1\">\n\t</label>\n\t<label>\n\t\t<h2>Blauwe kandidaten ({candidatesBlue})</h2>\n\t\t<input type=\"range\" min=\"1\" max=\"{seats * 3}\" bind:value={candidatesBlue} step=\"1\">\n\t</label>\n\t<label>\n\t\t<h2>Rode kandidaten ({candidatesRed})</h2>\n\t\t<input type=\"range\" min=\"1\" max=\"{seats * 3}\" bind:value={candidatesRed} step=\"1\">\n\t</label>\n\t<label>\n\t\t<h2>Rode kandidaten in voordracht ({nominationRed})</h2>\n\t\t<input type=\"range\" min=\"0\" max=\"{candidatesRed}\" step=\"1\" bind:value={nominationRed}>\n\t</label>\n\t<label>\n\t\t<h2>Steun rode kandidaten ({Math.round(supportRed * 100)}%)</h2>\n\t\t<input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" bind:value={supportRed}>\n\t</label>\n\t<label>\n\t\t<h2>Gemiddeld aantal stemmen ({avgVoteCount})</h2>\n\t\t<input type=\"range\" min=\"0\" max=\"{seats}\" step=\"1\" bind:value={avgVoteCount}>\n\t</label>\n\n\t<h2>Rood stemtactiek</h2>\n\t<label>\n\t\t<input type=radio bind:group={votingRed} value='random'>Geen / random\n\t</label>\n\t<label>\n\t\t<input type=radio bind:group={votingRed} value='bullet'>Bullet\n\t</label>\n\t<label>\n\t\t<input type=radio bind:group={votingRed} value='ordered'>Op volgorde\n\t</label>\n</div>\n<svg>\n\t<g class=\"fifty\" >\n\t\t<line y1=225 y2=225 x1=0 x2=\"80%\" stroke-width=\"1\" stroke=\"black\" stroke-opacity=\"1\" style=\"shape-rendering: crispEdges\" />\n\t\t<text x=\"10\" y=\"222\">50%</text>\n\t</g>\n\t<g class=\"nomination\" >\n\t\t<line y1=300 y2=375 x1={100 + (2.5 * nomination - 0.25) * circleRadius} x2={100 + (2.5 * nomination - 0.25) * circleRadius} stroke-width=\"2\" stroke=\"black\" stroke-opacity=\"1\" style=\"shape-rendering: crispEdges\" stroke-dasharray=\"10,10\" />\n\t\t<text class=\"end\" x=\"{100 + (2.5 * nomination - 0.5) * circleRadius}\" y=\"370\">voordracht</text>\n\t\t<text class=\"start\" x=\"{100 + (2.5 * nomination) * circleRadius}\" y=\"370\">niet voorgedragen</text>\n\t</g>\n\t{#each candidates as candidate, i}\n\t\t<g class=\"candidate score\" transform=\"translate({100 + i * circleRadius * 2.5}, 175)\">\n\t\t\t <rect class=\"red\" in:scale out:fade\n\t\t     \tx=0\n\t\t        y={100-candidate.total}\n\t\t        width={circleRadius*2}\n\t\t        height={candidate.red}\n        \t><title>{candidate.red.toFixed(1)}% punt door rood</title></rect>\n\t\t\t <rect class=\"blue\" in:scale out:fade\n\t\t     \tx=0\n\t\t        y={100-candidate.blue}\n\t\t        width={circleRadius*2}\n\t\t        height={candidate.blue}\n\t\t        title=\"{candidate.blue.toFixed(1)}% punt door blauw\"\n        \t><title>{candidate.blue.toFixed(1)}% punt door blauw</title></rect>\n        \t<text x=\"{circleRadius}\" y=\"117\">{candidate.total.toFixed(1)}%</text>\n\t\t</g>\n\t{/each}\n\t{#each candidates as {id, color, fifty, elected}, i}\n\t\t<g class=\"candidate {color}\" class:fifty={fifty} class:elected={elected} transform=\"translate({100 + i * circleRadius * 2.5}, 300)\">\n\t\t\t<circle cx={circleRadius} cy={circleRadius} r={circleRadius} transition:scale />\n\t\t\t<text y=\"{1.3 * circleRadius}\" x=\"{circleRadius}\">{id}</text>\n\t\t</g>\n\t{/each}\n\t<g class=\"candidate fifty\" transform=\"translate({circleRadius}, {circleRadius})\">\n\t\t<circle cx={circleRadius} cy={circleRadius} r={circleRadius} transition:scale fill=\"#fff\" />\n\t\t<text class=\"legenda\" y=\"{1.3 * circleRadius}\" x=\"{2.5 * circleRadius}\">50%+1 ({fiftyCount}/{seats})</text>\n\t</g>\n\t<g class=\"candidate fifty elected\" transform=\"translate({circleRadius}, {circleRadius * 3.5})\">\n\t\t<circle cx={circleRadius} cy={circleRadius} r={circleRadius} transition:scale fill=\"#fff\" />\n\t\t<text class=\"legenda\" y=\"{1.3 * circleRadius}\" x=\"{2.5 * circleRadius}\">verkozen ({electedCount}/{seats})</text>\n\t</g>\n</svg>"
  ],
  "names": [],
  "mappings": "AA+FC,SAAS,cAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,AACX,CAAC,AACD,uBAAS,CAAC,EAAE,cAAC,CAAC,AACb,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,AACrB,CAAC,AACD,uBAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,cAAC,CAAC,AACpC,YAAY,CAAE,MAAM,AACrB,CAAC,AACD,GAAG,cAAC,CAAC,AAAC,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAC,CAAC,AAC/C,UAAU,kBAAI,CAAE,MAAM,cAAC,CAAC,AAAC,IAAI,CAAE,OAAO,CAAC,CAAC,AACxC,UAAU,mBAAK,CAAC,MAAM,cAAC,CAAC,AAAC,IAAI,CAAE,OAAO,CAAC,CAAC,AACxC,IAAI,IAAI,cAAC,CAAC,AAAC,IAAI,CAAE,IAAI,AAAE,CAAC,AACxB,IAAI,KAAK,cAAC,CAAC,AAAC,IAAI,CAAE,IAAI,AAAE,CAAC,AACzB,UAAU,oBAAM,CAAC,MAAM,cAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,GAAG,AAAE,CAAC,AAC5D,UAAU,MAAM,sBAAQ,CAAC,MAAM,cAAC,CAAC,AAAC,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,GAAG,CAAC,UAAU,AAAE,CAAC,AAE/E,wBAAU,CAAC,IAAI,cAAC,CAAC,AAChB,WAAW,CAAE,MAAM,CACnB,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,IAAI,AAClB,CAAC,AACD,UAAU,oBAAM,CAAC,IAAI,cAAC,CAAC,AACtB,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,MAAM,AAClB,CAAC,AACD,wBAAU,CAAC,IAAI,QAAQ,cAAC,CAAC,AACxB,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,KAAK,AACnB,CAAC,AACD,yBAAW,CAAC,IAAI,MAAM,cAAC,CAAC,AACvB,WAAW,CAAE,KAAK,CAClB,UAAU,CAAE,MAAM,AACnB,CAAC,AACD,yBAAW,CAAC,IAAI,IAAI,cAAC,CAAC,AACrB,WAAW,CAAE,GAAG,AACjB,CAAC"
}